The code is still to be considered alpha state code!

A lot of changes has been made since version 0.2.*!

If you choose to try/use the code, please read the info above each function!

-------------------------------------------------------------

Version 0.3.* uses the new protocol implementation from 0.9.*, 
but preserves backward compatibility with 0.2, since the 
experimental header and message classes are not used.

Deprecated/historical methods that didn't follow PEAR's coding 
standard have been removed.

-------------------------------------------------------------

The actual intaraction with the server has been moved into 
a separate class named Net_NNTP_Protocol, where the commands 
each is accessed by a function; the list command is 
implemented in cmdList() etc. Net_NNTP now extends 
Net_NNTP_Protocol, and the old functions no longer interacts 
directly with the server, but calls the inherited functions 
from Net_NNTP_Protocol.

One major diffrence form the previous versions of Net_NNTP is, 
that the code handles the returned data diffrently, so should 
now be binary safe, since each revieved line is no longer trimed.

The functions getArticle(), getHeaders() and getBody() have been 
'renamed' into getArticleRaw(), getHeaderRaw() and getBodyRaw().
These new functions have a second boolean parameter, which comes 
in handy, if one prefer the returned data in the original array, 
and thus prevent the array from being imploded into a string.
The old function names will still work in version 0.3.*, but are 
to be considered deprecated, since they return objects instead 
of strings in version 0.9.*.

The authentication is now automatically performed, when the 
connection is etablished, or when authenticate() is called - it 
is no longer handled in command().

Functions like min() and max() have been renamed to a make the
package more NNTP'ish (for those who know the RFCs) - the old
function names are to be considered depresated, but still works.

The handling of errors in Net_NNTP_Protocol is much more 
extensive than in previous versions of Net_NNTP. Each cmdXXX() 
function handles the expected response codes, and only the 
response code og true is returned on success (previous versions 
returned the full status response string). On failure when 
interacting with the server the cmdXXX() functions returns 
pear_error objects.
