STABILITY NOTES

A lot of changes has been made since version 0.2.*, and some
of the code is still to be considered experimental!

Only methods documented in the official PEAR online manual
are to be considered non-experimental and stable (or at least
mature beta). Please read the phpdoc blocks above
undocumented features before using them, and remember that
critical changes might happen suddenly.


CLASS STATE

- Net_NNTP_Protocol_Client: Aside from the experimental
methods etc. the class should be considered mature beta
quality code.

- Net_NNTP_Client: Aside from the experimental methods etc.
the class should be considered beta quality code. Features
which rely on Net_NNTP_Message and Net_NNTP_Header are to be
considered alpha quality code, since these two classes might
change a little.

- Net_NNTP_Message & Net_NNTP_Header: Both classes are to be
considered experimental and subject to change. The intention
is that both classes should be moved into a separate class,
and possibly renamed.

- Net_NNTP: This class is officially dead, and is only
provided for backward compatibility with older v0.2 based
projects!


-------------------------------------------------------------

Changes with release 0.11.x

- The most significant change in v0.11.x is the renaming of
Net_NNTP_Realtime and Net_NNTP_Protocol into Net_NNTP_Client
and Net_NNTP_Protocol_Client. This was done to allow a
possible future server class. Dummy files preserves drop-in
backward compatibility with v0.10.x

-------------------------------------------------------------

Changes with release 0.10.x

- The actual interaction with the server has been moved into
a separate class named Net_NNTP_Protocol, in which the each
commands is implemented in separate functions (the LIST
command is implemented in cmdList() and so on).

- The Net_NNTP class from v0.2.x is now considered
deprecated, since it has been replaced with the
Net_NNTP_Realtime class.

- The ancient Net_NNTP class from v0.2.x has been completely
rewritten to use the new protocol implementation in
Net_NNTP_Protocol. This is only provided to allow existing
projects to use the new protocol implementation while
preserving backward compatibility and it should not be used
in new projects, since no development is done on the class at
all (only severe bugs will be fixed).

- The Net_NNTP_Realtime class extends Net_NNTP_Protocol, and
handles interaction with the server via calls to the
inherited methods from Net_NNTP_Protocol.

- The functions getArticle(), getHeaders() and getBody() have
been renamed into getArticleRaw(), getHeaderRaw() and
getBodyRaw(). These new methods have a second optional
boolean parameter, which comes in handy, if one prefers
having the internal/original array returned (previously the
results were always imploded and one often had to explode the
returned string).

- The authentication is no longer handled in command(), and
is only performed once - either when the connection is
established via connectAuthenticated(), or when
authenticate() is called.

- Functions like min() and max() have been renamed to a make
the package more NNTP'ish (for those who know the RFCs).

- The handling of errors in Net_NNTP_Protocol is much more
extensive than in previous versions of Net_NNTP. Each
cmdXXX() function handles the expected response codes, and
only the response code or true is returned on success
(previous versions returned the full status response string).
On failure when interacting with the server the cmdXXX()
functions returns pear_error objects.

- Received data is now handled binary safely (each received
line is no longer trimmed).

